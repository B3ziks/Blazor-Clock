// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Zadanie11.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\mobile app\Zadanie11\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\mobile app\Zadanie11\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\mobile app\Zadanie11\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\mobile app\Zadanie11\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\mobile app\Zadanie11\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\mobile app\Zadanie11\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\mobile app\Zadanie11\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\mobile app\Zadanie11\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\mobile app\Zadanie11\_Imports.razor"
using Zadanie11;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\mobile app\Zadanie11\_Imports.razor"
using Zadanie11.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\mobile app\Zadanie11\Pages\Alarmclock.razor"
using MultiLanguageSupport.MLIndex;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\mobile app\Zadanie11\Pages\Alarmclock.razor"
using System.Threading;

#line default
#line hidden
#nullable disable
    public partial class Alarmclock : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 47 "D:\mobile app\Zadanie11\Pages\Alarmclock.razor"
           
        public bool timeleft = true;
        public bool warning = true;

        public string thours = "";
        public string tminutes = "";
        public string tseconds = "";
        private void OnChangeValue1(ChangeEventArgs e)
        {
            thours = e.Value.ToString();
        }
        private void OnChangeValue2(ChangeEventArgs e)
        {
            tminutes = e.Value.ToString();
        }
        private void OnChangeValue3(ChangeEventArgs e)
        {
            tseconds = e.Value.ToString();
        }
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 68 "D:\mobile app\Zadanie11\Pages\Alarmclock.razor"
           

        private string buttonText = MLIndex.start;
        private string counting;
        public TimeSpan chosenTime;
        public double sec;
        public double h;
        public double m;
        private bool on = false;
        public int hours = 0;
        public int minutes = 0;
        public int seconds = 0;
        public void AlarmClicked()
        {

            // Pobranie wskaźnika na obiekt klasy odpowiedzialnej za odtworzenie dźwięku. Rodzaj klasy zostanie wybrany w zależności od platformy na jaką zostanie skompilowana aplikacja.
            //ISound s = DependencyService.Get<ISound>();


            if (thours != "")
            {
                hours = Convert.ToInt32(thours);
            }
            if (tminutes != "")
            {
                minutes = Convert.ToInt32(tminutes);
            }
            if (tseconds != "")
            {
                seconds = Convert.ToInt32(tseconds);
            }


            chosenTime = new TimeSpan(hours, minutes, seconds);
            on = !on;
            if (on)
                buttonText = MLIndex.stop;
            else
                buttonText = MLIndex.start;


            if (theTime == counting)
            {
                buttonText = MLIndex.start;
                counting = "";
                // if (s != null)
                // Rozpoczęcie odtwarzania dźwięku.
                //     s.Play();


                //counting.IsVisible = false;
                timeleft = true;
                // return false;
            }
            else if (buttonText == MLIndex.start)
            {
                timeleft = true;
                //return false;
            }
            else
            {
                //counting.IsVisible = true;
                timeleft = false;
                TimeSpan t = (chosenTime -
                    TimeSpan.FromSeconds(DateTime.Now.Second) -
                    TimeSpan.FromMinutes(DateTime.Now.Minute) -
                    TimeSpan.FromHours(DateTime.Now.Hour));
                sec = (double)t.TotalSeconds;
                m = (double)t.TotalMinutes;
                h = (double)t.TotalHours;




            }

        }


    

#line default
#line hidden
#nullable disable
#nullable restore
#line 150 "D:\mobile app\Zadanie11\Pages\Alarmclock.razor"
          

        string theTime;
        Timer aTimer;
        Timer aTimer2;

        protected override void OnInitialized()
        {
            aTimer = new Timer(Tick, null, 0, 1000);
            aTimer2 = new Timer(Tick2, null, 0, 1000);
        }

        private void Tick(object _)
        {
            theTime = DateTime.Now.ToLongTimeString();
            InvokeAsync(StateHasChanged);
        }

        public void Dispose()
        {
            aTimer?.Dispose();
        }


        private void Tick2(object _)
        {

            // if (s != null)
            // Rozpoczęcie odtwarzania dźwięku.
            //     s.Play();

            if (sec > 0 && m > 0 && h > 0)
            {
                counting = (chosenTime -
                TimeSpan.FromSeconds(DateTime.Now.Second) -
                TimeSpan.FromMinutes(DateTime.Now.Minute) -
                TimeSpan.FromHours(DateTime.Now.Hour)).ToString();
                // return true;

                if (counting == "00:00:00")
                {

                    buttonText = MLIndex.start;
                    timeleft = true;
                }

            }

            //
            else
            {

                buttonText = MLIndex.start;
                timeleft = true;


            }

            InvokeAsync(StateHasChanged);
        }


        public void Dispose2()
        {
            aTimer2?.Dispose();
        }
    

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
